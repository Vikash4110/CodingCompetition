import React, { useEffect, useState } from "react";
import ReactStars from "react-stars";
import toast, { Toaster } from "react-hot-toast";
import Img from '../assets/profile2.jpg';
import underline from '../assets/curveUnderline.svg';
import { FaQuoteLeft, FaQuoteRight } from 'react-icons/fa';


const backendUrl = import.meta.env.VITE_BACKEND_URL;

const questionsList = [
  "Knowledge base of the teacher (as perceived by you)",
  "Communication skills (in terms of articulation and comprehensibility)",
  "Sincerity / Commitment of the teacher (in terms of preparedness and interest in taking classes)",
  "Interest generated by the teacher in the class",
  "Ability to integrate course material with environment / other issues, to provide a broader perspective",
  "Accessibility and availability of the teacher in the department for academic consultations",
  "Initiative taken in formulating topics/ tests/assignments/examinations / seminars and projects",
  "Regularity in taking classes",
  "Completion of the course in a thorough and satisfactory manner",
  "Fairness in evaluating student performance and awarding grades.",
];

const Teacher = () => {
  const [teachers, setTeachers] = useState([]);
  const [selectedTeacher, setSelectedTeacher] = useState(null);
  const [questions, setQuestions] = useState([]);
  const [comment, setComment] = useState("");
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchTeachers = async () => {
      try {
        const response = await fetch(`${backendUrl}/api/data/teacher/all`);
        const data = await response.json();
        setTeachers(data);
      } catch (error) {
        console.error("Error fetching teachers:", error);
      } finally {
        setLoading(false);
      }
    };
    fetchTeachers();
  }, []);

  useEffect(() => {
    if (selectedTeacher) {
      const initialQuestions = questionsList.map((q) => ({
        question: q,
        rating: 1, // Default rating
      }));
      setQuestions(initialQuestions);
    }
  }, [selectedTeacher]);

  const handleRatingChange = (index, newRating) => {
    setQuestions((prev) => {
      const updated = [...prev];
      updated[index].rating = newRating;
      return updated;
    });
  };

  const handleSubmit = async () => {
    try {
      const response = await fetch(`${backendUrl}/api/data/feedback/submit`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ teacherId: selectedTeacher, questions, comment }),
      });
      const data = await response.json();
      toast.success("Feedback submitted successfully!");
      setSelectedTeacher(null);
    } catch (error) {
      console.error("Error submitting feedback:", error);
      toast.error("Error submitting feedback.");
    }
  };

  return (
    <div className="p-6  py-28">
      <Toaster />
      {loading ? (
        <p className="text-center text-2xl text-purple-700 font-semibold">Loading...</p>
      ) : (
        <>
          {!selectedTeacher ? (
            <>
            <h2 className="text-3xl md:text-5xl font-bold leading-tight flex flex-col items-center space-y-4 mb-20   text-center">
            <span className="relative inline-block text-primary font-bold bg-transparent">
              <span className='text-[#127c71]'>Select the teacher for feedback</span>
              <img
                src={underline}
                className='block mx-auto mt-2 w-40 md:w-60 h-auto rotate-3'
                alt="underline"
              />
            </span>
          </h2>


              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 ">
                {teachers.map((teacher) => (
                  <div className='flex flex-col relative shadow-2xl border-[#ffc221] border-2 rounded-3xl mt-28'>
                    <div className='absolute top-[-7rem] z-[10] mx-auto'>
                      <img
                        className="aspect-square rounded-full w-[140px] h-[140px] z-[25] border-[#ffc221] border-2"
                        src={Img}
                      />
                      <div className='w-[140px] h-[140px] bg-[#127c71] rounded-full absolute border-2 border-[#ffc221]
                                   top-[-6px] z-[-10] left-[10px]'></div>
                    </div>
                    <div
                      key={teacher._id}

                    >
                    <div className="flex flex-col">
                      <div className='text-center mt-7'>


                      <div className="flex justify-center space-x-4 ">

                      <div className='text-[#127c71] '>
                          <FaQuoteLeft />
                        </div>
                        <h2 className="text-2xl font-bold text-[#127c71] mb-3">{teacher.teacher_name}</h2>
                        <div className='text-[#127c71]'>
                          <FaQuoteRight />
                        </div>
                        </div>

                        <div>
                        <p className="text-lg text-gray-600 mb-1">
                          <strong>Department:</strong> {teacher.department}
                        </p>
                        <p className="text-lg text-gray-600 mb-1">
                          <strong>Subject Name:</strong> {teacher.subject_name}
                        </p>
                        <p className="text-lg text-gray-600 mb-1">
                          <strong>Subject Code:</strong> {teacher.subject_code}
                        </p>
                      </div>
                      </div>
                     

                      <button
                        onClick={() => setSelectedTeacher(teacher._id)}
                        className="mt-4 px-4 py-2 self-end bg-[#127c71] text-white rounded-3xl hover:bg-[#0f6f5c] transition-colors"
                      >
                        Give Feedback
                      </button>
                    </div>
                    </div>
                  </div>
                ))}
              </div>
            </>
          ) : (
            <>
             <div className="lg:w-1/2 md:w-5/6 mx-auto">
              <h2 className="text-3xl md:text-5xl font-bold leading-tight flex flex-col items-center space-y-4 mb-20   text-center">
            <span className="relative inline-block text-primary font-bold bg-transparent">
              <span className='text-[#127c71]'> Feedback for {teachers.find((t) => t._id === selectedTeacher)?.teacher_name}</span>
              <img
                src={underline}
                className='block mx-auto mt-2 w-40 md:w-60 h-auto rotate-3'
                alt="underline"
              />
            </span>
          </h2>
          <div className="border-2 border-[#127c71] p-5 rounded-3xl">
          <h2 className="text-xl md:text-2xl font-bold leading-tight flex flex-col items-center space-y-4  mt-5 mb-5  text-center">
            <span className="relative inline-block text-primary font-bold bg-transparent">
              <span className='text-[#127c71]'>Please Rate ! </span>
              
            </span>
          </h2>

          
              <div className="grid grid-cols-1 gap-8 ">
                {questions.map((q, index) => (
                  <div key={index} className="bg-white border border-[#ffc221] border-2 p-6 shadow-2xl rounded-3xl">
                    <p className="text-lg font-semibold mb-2">{q.question}</p>
                    <ReactStars
                      count={5}
                      size={24}
                      value={q.rating}
                      onChange={(newRating) => handleRatingChange(index, newRating)}
                      half={false}
                      color2={"#ffd700"} // Gold color for stars
                      
                    />
                  </div>
                ))}
              </div>
              <h2 className="text-xl md:text-2xl font-bold leading-tight flex flex-col items-center space-y-4  mt-10  text-center">
            <span className="relative inline-block text-primary font-bold bg-transparent">
              <span className='text-[#127c71]'>Your Thoughts</span>
              <img
                src={underline}
                className='block mx-auto mt-2 w-16 md:w-32 h-auto rotate-3'
                alt="underline"
              />
            </span>
          </h2>
              <textarea
           
                value={comment}
                onChange={(e) => setComment(e.target.value)}
                className="block w-full mt-4 border-2 border-[#127c71] p-4 rounded-3xl shadow-2xl outline-[#127c71] "
              />
              

              
              <button
                onClick={handleSubmit}
                className="mt-10 px-8 py-3  justify-center w-4/6 mx-auto flex bg-[#127c71] text-white rounded-3xl hover:bg-[#0f6f5c] transition-colors "
              >
                Submit Feedback
              </button>
              
              </div>
              </div>
            </>
          )}
        </>
      )}
    </div>
  );
};

export default Teacher;
